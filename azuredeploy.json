{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator account of the Active Directory domain controller VM and domain"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The password for the administrator account of the Active Directory domain controller VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "contoso.com",
      "metadata": {
        "description": "The FQDN of the Active Directory domain to be created"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The size of the VM to host the Active Directory domain controller"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "adVmName": {
      "type": "string",
      "defaultValue": "dc01",
      "maxLength": 15,
      "metadata": {
        "description": "The name of the VM to host the Active Directory domain controller"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "sms-vnet",
      "metadata": {
        "description": "The virtual network name"
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network address range"
      }
    },
    "inboundNatRulesName": {
      "type": "string",
      "defaultValue": "AllowRdpInbound",
      "metadata": {
        "description": "The name of inbound NAT rule"
      }
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "dc01-nic",
      "metadata": {
        "description": "The name of the network interface of the VM to host the Active Directory domain controller"
      }
    },
    "privateIPAddress": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "The private IP address of the network interface of the VM to host the Active Directory domain controller"
      }
    },
    "adSubnetName": {
      "type": "string",
      "defaultValue": "ad-subnet",
      "metadata": {
        "description": "The name of the subnet to which the VM to host the Active Directory domain controller should be connected"
      }
    },
    "adSubnetRange": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The range of the subnet to which the VM to host the Active Directory domain controller should be connected"
      }
    },
    "smsSubnetName": {
      "type": "string",
      "defaultValue": "sms-source-subnet",
      "metadata": {
        "description": "The name of the subnet to which the VM to host domain member servers should be connected"
      }
    },
    "smsSubnetRange": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "The range of the subnet to which the VM to host domain member servers should be connected"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-07-01",
      "name": "[parameters('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIPAddress')]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('adSubnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-08-01",
      "name": "[parameters('adVmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('adVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}_OSDisk', parameters('adVmName'))]",
            "caching": "ReadOnly",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": [
            {
              "name": "[format('{0}_DataDisk', parameters('adVmName'))]",
              "caching": "ReadWrite",
              "createOption": "Empty",
              "diskSizeGB": 20,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              },
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('adVmName'), 'CreateADForest')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[uri(parameters('_artifactsLocation'), format('DSC/CreateADPDC.zip{0}', parameters('_artifactsLocationSasToken')))]",
          "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
          "Properties": {
            "DomainName": "[parameters('domainName')]",
            "AdminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('adVmName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "VNet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "adSubnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adSubnetRange": {
            "value": "[parameters('adSubnetRange')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Virtual Network to Create"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the new VNET in CIDR format"
              }
            },
            "adSubnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the subnet created in the new VNET"
              }
            },
            "adSubnetRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the subnet created in the new VNET"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('adSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('adSubnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "UpdateVNetDNS",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "adSubnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adSubnetRange": {
            "value": "[parameters('adSubnetRange')]"
          },
          "smsSubnetName": {
            "value": "[parameters('smsSubnetName')]"
          },
          "smsSubnetRange": {
            "value": "[parameters('smsSubnetRange')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('privateIPAddress')]"
            ]
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "metadata": {
                "description": "The name of the virtual network to update"
              }
            },
            "virtualNetworkAddressRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the virtual network in CIDR format"
              }
            },
            "adSubnetName": {
              "type": "string",
              "metadata": {
                "description": "The name of the domain controller subnet in the virtual network"
              }
            },
            "adSubnetRange": {
              "type": "string",
              "metadata": {
                "description": "The address range of the domain controller subnet in the virtual network"
              }
            },
            "smsSubnetName": {
              "type": "string",
              "defaultValue": "sms-source-subnet",
              "metadata": {
                "description": "The name of the domain member servers subnet in the virtual network"
              }
            },
            "smsSubnetRange": {
              "type": "string",
              "defaultValue": "10.0.1.0/24",
              "metadata": {
                "description": "The address range of the domain member servers subnet in the virtual network"
              }
            },
            "DNSServerAddress": {
              "type": "array",
              "metadata": {
                "description": "The IP address(es) of the DNS Server(s) to be used in the virtual network"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetworkAddressRange')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[parameters('DNSServerAddress')]"
                },
                "subnets": [
                  {
                    "name": "[parameters('adSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('adSubnetRange')]"
                    }
                  },
                  {
                    "name": "[parameters('smsSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('smsSubnetRange')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('adVmName'), 'CreateADForest')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "DeployDomainJoinedVMs",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainToJoin": {
            "value": "[parameters('domainToJoin')]"
          },
          "domainUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "adSubnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adSubnetRange": {
            "value": "[parameters('adSubnetRange')]"
          },
          "smsSubnetName": {
            "value": "[parameters('smsSubnetName')]"
          },
          "smsSubnetRange": {
            "value": "[parameters('smsSubnetRange')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "The name of the administrator account of the Active Directory domain controller VM and domain"
              }
            },
            "adminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "The password for the administrator account of the Active Directory domain controller VM and domain"
              }
            },
            "domainToJoin": {
              "type": "string",
              "defaultValue": "contoso.com",
              "metadata": {
                "description": "The FQDN of the Active Directory domain to be created"
              }
            },
            "domainUsername": {
              "type": "string",
              "metadata": {
                "description": "Username of the domain account"
              }
            },
            "domainPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Password of the account on the domain"
              }
            },
            "ouPath": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Organizational Unit path in which the nodes and cluster will be present."
              }
            },
            "domainJoinOptions": {
              "type": "int",
              "defaultValue": 3,
              "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
              }
            },
            "vmNamePrefix": {
              "type": "string",
              "defaultValue": "sms-svr",
              "metadata": {
                "description": "VM name prefix"
              }
            },
            "pipNamePrefix": {
              "type": "string",
              "defaultValue": "sms-pip",
              "metadata": {
                "description": "Public IP address name prefix"
              }
            },
            "nicNamePrefix": {
              "type": "string",
              "defaultValue": "sms-nic",
              "metadata": {
                "description": "Nic name prefix"
              }
            },
            "imagePublisher": {
              "type": "string",
              "defaultValue": "MicrosoftWindowsServer",
              "metadata": {
                "description": "Image Publisher"
              }
            },
            "imageOffer": {
              "type": "string",
              "defaultValue": "WindowsServer",
              "metadata": {
                "description": "Image Offer"
              }
            },
            "imageSKU": {
              "type": "string",
              "defaultValue": "2022-Datacenter",
              "allowedValues": [
                "2019-Datacenter",
                "2019-Datacenter-Server-Core",
                "2022-Datacenter",
                "2022-Datacenter-Server-Core"
              ],
              "metadata": {
                "description": "Image SKU"
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_B2ms",
              "metadata": {
                "description": "VM size"
              }
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "sms-vnet",
              "metadata": {
                "description": "Virtual network name"
              }
            },
            "addressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "Virtual network address prefix"
              }
            },
            "virtualNetworkResourceGroup": {
              "type": "string",
              "defaultValue": "sms-lab-RG",
              "metadata": {
                "description": "Resource group of the VNet"
              }
            },
            "adSubnetName": {
              "type": "string",
              "defaultValue": "ad-subnet",
              "metadata": {
                "description": "VNet AD subnet name"
              }
            },
            "adSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/24",
              "metadata": {
                "description": "VNet ad subnet prefix"
              }
            },
            "smsSubnetName": {
              "type": "string",
              "defaultValue": "sms-source-subnet",
              "metadata": {
                "description": "VNet subnet name"
              }
            },
            "smsSubnetRange": {
              "type": "string",
              "defaultValue": "10.0.1.0/24",
              "metadata": {
                "description": "VNet subnet prefix"
              }
            },
            "nsgName": {
              "type": "string",
              "defaultValue": "sms-nsg",
              "metadata": {
                "description": "Network security group name"
              }
            }
          },
          "variables": {
            "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
            "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('smsSubnetName'))]",
            "numberOfInstances": 3,
            "computeAPIVersion": "2021-03-01",
            "networkAPIVersion": "2021-02-01"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
              "apiVersion": "[variables('networkAPIVersion')]",
              "location": "[resourceGroup().location]",
              "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/',parameters('nsgName'))]",
                "pipLoop"
              ],
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[variables('subnetRef')]"
                      },
                      "publicIpAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses',concat(parameters('pipNamePrefix'),copyindex()))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/publicIpAddresses",
              "name": "[concat(parameters('pipNamePrefix'), copyindex())]",
              "apiVersion": "[variables('networkApiVersion')]",
              "copy": {
                "name": "pipLoop",
                "count": "[variables('numberOfInstances')]"
              },
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIpAllocationMethod": "Dynamic"
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[parameters('nsgName')]",
              "apiVersion": "[variables('networkApiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "default-allow-rdp",
                    "properties": {
                      "priority": 1000,
                      "sourceAddressPrefix": "*",
                      "protocol": "Tcp",
                      "destinationPortRange": "3389",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
              "apiVersion": "[variables('computeAPIVersion')]",
              "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfInstances')]"
              },
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "nicLoop"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[parameters('imagePublisher')]",
                    "offer": "[parameters('imageOffer')]",
                    "sku": "[parameters('imageSKU')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                       "storageAccountType": "Standard_LRS"
                    }
                  },
                  "dataDisks": [
                    {
                      "name": "[concat(parameters('vmNamePrefix'), copyIndex(),'-DataDisk1')]",
                      "caching": "None",
                      "createOption": "Empty",
                      "diskSizeGB": 63,
                      "lun": 0,
                      "managedDisk": {
                         "storageAccountType": "Standard_LRS"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-03-01",
              "copy": {
                "name": "vmExtensionLoop",
                "count": "[variables('numberOfInstances')]"
              },
              "name": "[format('{0}/{1}', concat(parameters('vmNamePrefix'), copyIndex()), 'joindomain')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "name": "[parameters('domainToJoin')]",
                  "ouPath": "[parameters('ouPath')]",
                  "user": "[format('{0}\\{1}', parameters('domainToJoin'), parameters('domainUsername'))]",
                  "restart": true,
                  "options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                  "Password": "[parameters('domainPassword')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmNamePrefix'), copyIndex()))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('smsSubnetName'))]"
      ]
    }
  ]
}